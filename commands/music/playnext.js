const { ApplicationCommandOptionType, EmbedBuilder } = require('discord.js');
const { QueryType, useMainPlayer, useQueue } = require('discord-player');
const { Translate } = require('../../process_tools');

module.exports = {
    name: 'playnext',
    description: ("Ph√°t m·ªôt b√†i ngay sau b√†i hi·ªán t·∫°i"),
    voiceChannel: true,
    options: [
        {
            name: 'song',
            description: ('T√™n ho·∫∑c link b√†i h√°t b·∫°n mu·ªën ph√°t ti·∫øp theo'),
            type: ApplicationCommandOptionType.String,
            required: true,
        }
    ],

    async execute({ inter }) {
        const player = useMainPlayer();
        const queue = useQueue(inter.guild);

        // Kh√¥ng c√≥ nh·∫°c ƒëang ph√°t
        if (!queue?.isPlaying()) {
            const embed = new EmbedBuilder()
                .setColor('#ff4d4d')
                .setTitle("‚ùå Kh√¥ng c√≥ nh·∫°c ph√°t")
                .setDescription(await Translate(`Hi·ªán t·∫°i kh√¥ng c√≥ b√†i h√°t n√†o ƒëang ph√°t, <${inter.member}>.`))
                .setTimestamp();
            return inter.editReply({ embeds: [embed] });
        }

        const song = inter.options.getString('song');
        const res = await player.search(song, {
            requestedBy: inter.member,
            searchEngine: QueryType.AUTO
        });

        // Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£
        if (!res?.tracks.length) {
            const embed = new EmbedBuilder()
                .setColor('#ff4d4d')
                .setTitle("üîç Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£")
                .setDescription(await Translate(`Kh√¥ng t√¨m th·∫•y b√†i h√°t n√†o ph√π h·ª£p v·ªõi: **${song}** <${inter.member}>.`))
                .setTimestamp();
            return inter.editReply({ embeds: [embed] });
        }

        // Kh√¥ng h·ªó tr·ª£ playlist
        if (res.playlist) {
            const embed = new EmbedBuilder()
                .setColor('#ffcc00')
                .setTitle("‚ö†Ô∏è Kh√¥ng h·ªó tr·ª£ playlist")
                .setDescription(await Translate(`L·ªánh n√†y ch·ªâ √°p d·ª•ng cho 1 b√†i h√°t, kh√¥ng √°p d·ª•ng cho playlist <${inter.member}>.`))
                .setTimestamp();
            return inter.editReply({ embeds: [embed] });
        }

        // Th√™m b√†i v√†o ngay sau b√†i hi·ªán t·∫°i
        queue.insertTrack(res.tracks[0], 0);

        const playNextEmbed = new EmbedBuilder()
            .setColor('#57F287') // xanh l√°
            .setTitle("üéß ƒê√£ th√™m b√†i h√°t v√†o h√†ng ch·ªù")
            .setDescription(await Translate(`**${res.tracks[0].title}** s·∫Ω ph√°t ngay sau b√†i hi·ªán t·∫°i.`))
            .setFooter({ text: `Y√™u c·∫ßu b·ªüi: ${inter.member.displayName}` })
            .setTimestamp();

        await inter.editReply({ embeds: [playNextEmbed] });
    }
};
