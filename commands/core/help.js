const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

module.exports = {
    name: 'help',
    description: "Hi·ªÉn th·ªã t·∫•t c·∫£ l·ªánh c·ªßa bot",
    showHelp: false,

    async execute({ client, inter }) {
        const commands = client.commands.filter(x => x.showHelp !== false);

        const musicCmds = commands.filter(cmd => 
            ['play', 'stop', 'pause', 'resume', 'skip', 'queue', 'volume', 'loop', 'shuffle', 'nowplaying', 'clear'].includes(cmd.name)
        );
        const utilityCmds = commands.filter(cmd => 
            !['play', 'stop', 'pause', 'resume', 'skip', 'queue', 'volume', 'loop', 'shuffle', 'nowplaying', 'clear'].includes(cmd.name)
        );

        const embed = new EmbedBuilder()
            .setColor('#FF6B9D')
            .setAuthor({ 
                name: `${client.user.username} - Music Bot üéµ`, 
                iconURL: client.user.displayAvatarURL() 
            })
            .setTitle('üìã **DANH S√ÅCH L·ªÜNH**')
            .setDescription('Bot VƒÉn Minh h·∫π h·∫π')

        if (musicCmds.size > 0) {
            embed.addFields([{
                name: `üéµ **L·ªÜNH NH·∫†C** (${musicCmds.size})`,
                value: musicCmds.map(x => `\`/${x.name}\``).join('\n'),
                inline: true
            }]);
        }

        if (utilityCmds.size > 0) {
            embed.addFields([{
                name: `‚öôÔ∏è **L·ªÜNH TI·ªÜN √çCH** (${utilityCmds.size})`,
                value: utilityCmds.map(x => `\`/${x.name}\``).join('\n'),
                inline: true
            }]);
        }

        // Th√™m Boo Commands
        embed.addFields([
            {
                name: 'üé≠ **BOO COMMANDS** (4)',
                value: '`!mood` - change mood\n`!trollpic` - ·∫¢nh troll\n`!boi` - Coi b√≥i\n`!weather` - th·ªùi ti·∫øt',
                inline: true
            },
            {
                name: 'üìä **TH·ªêNG K√ä**',
                value: `ü§ñ ${client.guilds.cache.size} servers\nüë• ${client.users.cache.size} users\n‚ö° ${client.ws.ping}ms`,
                inline: true
            },
            {
                name: 'üí° **H∆Ø·ªöNG D·∫™N NHANH**',
                value: `**Nh·∫°c:** \`/play [b√†i h√°t]\`\n**Boo Chat:** G·ªçi t√™n "boo" ho·∫∑c tag bot (@boo)`,
                inline: true
            },
        ])
        .setImage('https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExbTNyeGRzcjhodGJrajRiZWk5dnd4cHZhdDFtdDJsNjFnajVrNGZtZyZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/vLZJfnIqxLla26Gr4i/giphy.gif')
        .setTimestamp()
        .setFooter({ 
            text: `üéº Music + Boo Agent ‚Ä¢ Made with ‚ù§Ô∏è by Phucx ‚Ä¢ ${new Date().getFullYear()}`, 
            iconURL: inter.member.displayAvatarURL({ dynamic: true }) 
        });

        // Contact buttons
        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setLabel('üìò GitHub')
                    .setURL('https://github.com/Phuc710/dis_xi_trum')
                    .setStyle(ButtonStyle.Link),
                new ButtonBuilder()
                    .setLabel('üí¨ Discord')
                    .setURL('https://discord.gg/cc9U4w6a')
                    .setStyle(ButtonStyle.Link),
                new ButtonBuilder()
                    .setLabel('‚òï Donate')
                    .setURL('https://vn.x10.mx')
                    .setStyle(ButtonStyle.Link)
            );

        await inter.editReply({ 
            embeds: [embed], 
            components: [row] 
        });
    }
};